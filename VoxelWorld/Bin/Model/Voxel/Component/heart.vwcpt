#include <iostream>
#include <limits>
#include <cmath>
#include <string>

using namespace std;

inline double Cubic(double s) { return s * s * s; }

double HeartEquation(double x, double y, double z)
{
    return Cubic(x * x + 9.0 / 4.0 * z * z + y * y - 1.0)
        - x * x * Cubic(y) - 9.0 / 80.0 * z * z * Cubic(y);
}

double Solve(double x, double y)
{
    double LBound = 0.0, thisRt, lastRt = HeartEquation(x, y, LBound);
    while((thisRt = HeartEquation(x, y, LBound + 0.001)) > 0 == lastRt > 0 && (LBound += 0.001) <= 5.0)
        lastRt = thisRt;
    return LBound > 5.0 ? numeric_limits<double>::quiet_NaN() : LBound;
}

constexpr size_t WIDTH = 60;
constexpr size_t HEIGHT = 30;

int main(void)
{
    for(size_t y = 0; y != HEIGHT; ++y)
    {
        for(size_t x = 0; x != WIDTH; ++x)
        {
            double sx = x / (WIDTH - 1.0) * 3.0 - 1.5;
            double sy = - (y / (HEIGHT - 1.0)) * 3.0 + 1.5;
            double s = Solve(sx, sy);
            if(isnan(s))
                cout << ' ';
            else
            {
                double c = (-0.557 * sx + 0.743 * sy + 0.335 * s) / sqrt(sx * sx + sy * sy + s * s) * 1.025;
                cout << string(".:-=+*#")[size_t((c < 0.0 ? 0.0 : (c > 1.0 ? 1.0 : c)) * 6)];
            }
        }
        cout << endl;
    }
}
